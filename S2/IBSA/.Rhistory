3+3
install.packages("imputeTS")
library(devtools)
install_github("SteffenMoritz/imputeTS")
tsImpute(time, dimension, metric, max.iters = 2,
cv.fold = 2, n.trees = 100, verbose = T, ...)
install.packages("remotes")
remotes::install_github("dppalomar/imputeFin")
library(KFAS)
library(tseries)
library(timeSeries)
library(zoo)
library(quantmod)
install.packages("KFAS")
install.packages("timeSeries")
install.packages("zoo")
install.packages("quantmod")
install.packages("tseries")
install.packages("timeSeries")
library(KFAS)
library(tseries)
library(timeSeries)
library(zoo)
library(quantmod)
getDailyPrices = function( tickerSym, startDate, endDate )
{
prices = get.hist.quote( instrument = tickerSym, start = startDate, end = endDate,
quote="AdjClose", provider="yahoo",
compression="d",  quiet=T)
prices.ts = ts(prices)
return( prices.ts )
}
View(getDailyPrices)
View(getDailyPrices)
kalmanFilter = function( x )
{
t = x
if (class(t) != "ts") {
t = ts(t)
}
ssModel = structSSM( y = t, distribution="Gaussian")
ssFit = fitSSM(inits=c(0.5*log(var(t)), 0.5*log(var(t))), model = ssModel )
kfs = KFS( ssFit$model, smoothing="state", nsim=length(t))
vals = kfs$a
lastVal = vals[ length(vals)]
return(lastVal)
}
View(kalmanFilter)
View(kalmanFilter)
Start = "2011-01-01"
End   = "2012-12-31"
SandP = "^GSPC"
windowWidth = 20
tsLength = 100
SAndP.ts = getDailyPrices( SandP, Start, End )
SAndP.ts = SAndP.ts[1:tsLength]
SAndP.smoothed = rollapply( data=SAndP.ts, width=windowWidth, FUN=kalmanFilter)
par(mfrow=c(1,1))
prices = coredata( SAndP.ts[windowWidth:length(SAndP.ts)])
plot(prices, col="blue", type="l")
lines(coredata(SAndP.smoothed), col="magenta")
par(mfrow=c(1,1))
Start = "2011-01-01"
End   = "2012-12-31"
SandP = "GSPC"
windowWidth = 20
tsLength = 100
SAndP.ts = getDailyPrices( SandP, Start, End )
SAndP.ts = SAndP.ts[1:tsLength]
SAndP.smoothed = rollapply( data=SAndP.ts, width=windowWidth, FUN=kalmanFilter)
par(mfrow=c(1,1))
prices = coredata( SAndP.ts[windowWidth:length(SAndP.ts)])
plot(prices, col="blue", type="l")
lines(coredata(SAndP.smoothed), col="magenta")
par(mfrow=c(1,1))
View(kalmanFilter)
View(getDailyPrices)
install.packages("TTR")
library(TTR)
emaSmooth = function( x )
{
ema = EMA(x)
val = ema[ length(ema) ]
return(val)
}
emaSmooth = rollapply( data = SAndP.ts, width=windowWidth, FUN=emaSmooth)
View(emaSmooth)
library(forecast)   # Most popular forecasting pkg
library(sweep)      # Broom tidiers for forecast pkg
library(timetk)
# Working with time series in R
library(imputeTS)
setwd("C:/Users/ahmed/Desktop/S2/IBSA")
library(forecast)   # Most popular forecasting pkg
library(sweep)      # Broom tidiers for forecast pkg
library(timetk)
# Working with time series in R
library(imputeTS)
setwd("C:/Users/ahmed/Desktop/S2/IBSA")
dftemp <- read.csv(file = 'MCAR40.csv')
df=dftemp
df$Temperature<- na_kalman(df$Temperature, model = "auto.arima", smooth = TRUE)
df$Humidity<- na_kalman(df$Humidity, model = "auto.arima", smooth = TRUE)
df$CO2<- na_kalman(df$CO2, model = "auto.arima", smooth =TRUE)
df$Noise<- na_kalman(df$Noise, model = "auto.arima", smooth = TRUE)
df$Pressure<- na_kalman(df$Pressure,model = "auto.arima",  smooth =TRUE)
write.csv(df,"dataImputed/kalmanArima_TRUE_MCAR40.csv", row.names = FALSE)
df=dftemp
df$Temperature<- na_kalman(df$Temperature, model = "StructTS",smooth = TRUE)
df$Humidity<- na_kalman(df$Humidity, model = "StructTS",smooth = TRUE)
df$CO2<- na_kalman(df$CO2,model = "StructTS", smooth = TRUE)
df$Noise<- na_kalman(df$Noise, model = "StructTS", smooth = TRUE)
df$Pressure<- na_kalman(df$Pressure, model = "StructTS",smooth = TRUE)
write.csv(df,"dataImputed/kalmanStructTS_TRUE_MCAR40.csv", row.names = FALSE)
dftemp <- read.csv(file = 'MCAR25.csv')
df=dftemp
df$Temperature<- na_kalman(df$Temperature, model = "auto.arima", smooth = TRUE)
df$Humidity<- na_kalman(df$Humidity, model = "auto.arima", smooth = TRUE)
df$CO2<- na_kalman(df$CO2, model = "auto.arima", smooth =TRUE)
df$Noise<- na_kalman(df$Noise, model = "auto.arima", smooth = TRUE)
df$Pressure<- na_kalman(df$Pressure,model = "auto.arima",  smooth =TRUE)
write.csv(df,"dataImputed/kalmanArima_TRUE_MCAR25.csv", row.names = FALSE)
df=dftemp
df$Temperature<- na_kalman(df$Temperature, model = "StructTS",smooth = TRUE)
df$Humidity<- na_kalman(df$Humidity, model = "StructTS",smooth = TRUE)
df$CO2<- na_kalman(df$CO2,model = "StructTS", smooth = TRUE)
df$Noise<- na_kalman(df$Noise, model = "StructTS", smooth = TRUE)
df$Pressure<- na_kalman(df$Pressure, model = "StructTS",smooth = TRUE)
write.csv(df,"dataImputed/kalmanStructTS_TRUE_MCAR25.csv", row.names = FALSE)
dftemp <- read.csv(file = 'MCAR10.csv')
df=dftemp
df$Temperature<- na_kalman(df$Temperature, model = "auto.arima", smooth = TRUE)
df$Humidity<- na_kalman(df$Humidity, model = "auto.arima", smooth = TRUE)
df$CO2<- na_kalman(df$CO2, model = "auto.arima", smooth =TRUE)
df$Noise<- na_kalman(df$Noise, model = "auto.arima", smooth = TRUE)
df$Pressure<- na_kalman(df$Pressure,model = "auto.arima",  smooth =TRUE)
write.csv(df,"dataImputed/kalmanArima_TRUE_MCAR10.csv", row.names = FALSE)
df=dftemp
df$Temperature<- na_kalman(df$Temperature, model = "StructTS",smooth = TRUE)
df$Humidity<- na_kalman(df$Humidity, model = "StructTS",smooth = TRUE)
df$CO2<- na_kalman(df$CO2,model = "StructTS", smooth = TRUE)
df$Noise<- na_kalman(df$Noise, model = "StructTS", smooth = TRUE)
df$Pressure<- na_kalman(df$Pressure, model = "StructTS",smooth = TRUE)
write.csv(df,"dataImputed/kalmanStructTS_TRUE_MCAR10.csv", row.names = FALSE)
dftemp <- read.csv(file = 'MCAR5.csv')
df=dftemp
df$Temperature<- na_kalman(df$Temperature, model = "auto.arima", smooth = TRUE)
df$Humidity<- na_kalman(df$Humidity, model = "auto.arima", smooth = TRUE)
df$CO2<- na_kalman(df$CO2, model = "auto.arima", smooth =TRUE)
df$Noise<- na_kalman(df$Noise, model = "auto.arima", smooth = TRUE)
df$Pressure<- na_kalman(df$Pressure,model = "auto.arima",  smooth =TRUE)
write.csv(df,"dataImputed/kalmanArima_TRUE_MCAR5.csv", row.names = FALSE)
df=dftemp
df$Temperature<- na_kalman(df$Temperature, model = "StructTS",smooth = TRUE)
df$Humidity<- na_kalman(df$Humidity, model = "StructTS",smooth = TRUE)
df$CO2<- na_kalman(df$CO2,model = "StructTS", smooth = TRUE)
df$Noise<- na_kalman(df$Noise, model = "StructTS", smooth = TRUE)
df$Pressure<- na_kalman(df$Pressure, model = "StructTS",smooth = TRUE)
write.csv(df,"dataImputed/kalmanStructTS_TRUE_MCAR5.csv", row.names = FALSE)
